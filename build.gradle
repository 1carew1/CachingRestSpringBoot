buildscript {
    ext {
        springBootVersion = '2.0.0.M5'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
        classpath 'de.undercouch:gradle-download-task:3.2.0'
    }
}

group = 'springio'

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'
apply plugin: 'de.undercouch.download'


group = 'com.colm.cachetest'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}


dependencies {
    // Hazelcast - Internal
    // https://mvnrepository.com/artifact/com.hazelcast/hazelcast-spring
//    compile group: 'com.hazelcast', name: 'hazelcast'
//    compile group: 'com.hazelcast', name: 'hazelcast-spring'

    // EhCache 2 - Internal
    // https://mvnrepository.com/artifact/net.sf.ehcache/ehcache
    compile group: 'net.sf.ehcache', name: 'ehcache', version: '2.10.4'

    // Infispan - Internal
//    compile group: 'org.infinispan', name: 'infinispan-spring', version: '7.2.5.Final'
//    compile group: 'org.infinispan', name: 'infinispan-embedded', version: '7.2.5.Final'

//    Couchbase - External - no control over eviction algorithm
//    compile group: 'com.couchbase.client', name: 'java-client'
//    compile group: 'com.couchbase.client', name: 'couchbase-spring-cache'

    // Redis - External
    // compile "org.springframework.boot:spring-boot-starter-data-redis"
    // compile "redis.clients:jedis:2.6.1"

    // Memcached - External
//    compile 'io.sixhours:memcached-spring-boot-starter:1.2.0'

    compile 'org.tensorflow:tensorflow:1.3.0-rc1'
    compile 'commons-io:commons-io:2.5'
    compile 'ch.obermuhlner:big-math:1.2.1'
    compile 'org.springframework.boot:spring-boot-starter-data-rest'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-cache'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile "org.springframework.boot:spring-boot-starter-thymeleaf"
    compile 'com.yahoo.elide:elide-datastore-hibernate5:1.0.0.19'
    compile "org.springframework.boot:spring-boot-starter-logging"

    runtime 'com.h2database:h2'
    runtime 'mysql:mysql-connector-java'

    testCompile 'io.rest-assured:rest-assured:3.0.7'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

task buildDocker(type: Docker, dependsOn: build) {
    // For setting more variables see : https://github.com/Transmode/gradle-docker
    push = false
    project.group = ""
    applicationName = jar.baseName
    dockerfile = file('Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

import de.undercouch.gradle.tasks.download.Download

task downloadInceptionFrozen(type: Download) {
    onlyIfNewer true
    src 'https://storage.googleapis.com/download.tensorflow.org/models/inception_v3_2016_08_28_frozen.pb.tar.gz'
    dest new File(buildDir, 'inception_v3_2016_08_28_frozen.pb.tar.gz')
}

task fetchInceptionFrozenModel(dependsOn: downloadInceptionFrozen, type: Copy) {
    from tarTree(downloadInceptionFrozen.dest)
    into 'src/main/resources/inception-v3'
}

build.dependsOn fetchInceptionFrozenModel
